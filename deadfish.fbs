namespace FlatBuffGenerated;

// level

struct Vec2 {
  x:float;
  y:float;
}

table Tile {
  path: string;
  size: Vec2;
  id: uint16;
}

table Tileset {
  path: string;
  firstgid: uint16;
}

table TileArray {
  tiles: [Tile];
}

table Visible {
    pos: Vec2;
    rotation: float;
    gid: uint16;
}

table Collision {
    pos: Vec2;
    ellipse: bool;
    radius: float;
    polyverts: [Vec2];
}

table HidingSpot {
    pos: Vec2;
    ellipse: bool;
    radius: float;
    polyverts: [Vec2];
}

table NavPoint {
  position: Vec2;
  radius: float;
  name: string;
  neighbors: [string];
  isspawn: bool;
  isplayerspawn: bool;
}

table PlayerWall {
  position: Vec2;
  size: Vec2;
}

table Level {
  visible: [Visible];
  hidingspots:[HidingSpot];
  collision:[Collision];
  navpoints:[NavPoint];
  playerwalls:[PlayerWall];
  tilesets:[Tileset];
  size:Vec2;
}

// client

table CommandMove {
  target:Vec2;
}

table CommandKill {
  mobID:uint16;
}

table CommandRun {
  run:bool;
}

table JoinRequest {
  name:string;
}

table PlayerReady {

}

union ClientMessageUnion {
  CommandMove,
  CommandKill,
  CommandRun,
  JoinRequest,
  PlayerReady
}

table ClientMessage {
  event:ClientMessageUnion;
}

// server

enum MobState: byte {
  Walk,
  Run,
  Attack
}

enum PlayerRelation: byte {
  None,
  Close,
  Targeted
}

table Mob {
  mobID:uint16;
  pos:Vec2;
  angle:float;
  state:MobState;
  species:uint16;
  relation:PlayerRelation;
}

table Indicator {
  angle:float;
  force:float;
  visible:bool;
}

table WorldState {
  mobs:[Mob];
  indicators:[Indicator];
  stepsRemaining:uint64;
}

table HighscoreEntry {
  playerID:uint16;
  playerPoints:int16;
}

table HighscoreUpdate {
  players:[HighscoreEntry];
}

table DeathReport {
  killer:uint16;
  killed:uint16;
}

enum SimpleServerEventType: byte {
  GameEnded,
  TooFarToKill,
  GameAlreadyInProgress
}

table SimpleServerEvent {
  type:SimpleServerEventType;
}

table InitPlayer {
  playerID:uint16;
  name:string;
  species:uint16;
  ready:bool;
}

table InitMetadata {
  players:[InitPlayer];
  yourMobID:uint16;
  yourPlayerID:uint16;
}

union ServerMessageUnion {
  DeathReport,
  HighscoreUpdate,
  SimpleServerEvent,
  InitMetadata,
  WorldState,
  Level
}

table ServerMessage {
  event:ServerMessageUnion;
}
